# docker-compose.yml
services:
  mongo:
    image: mongo:6.0
    container_name: big_data_optimizer_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: big_data_optimizer_backend
    restart: unless-stopped
    env_file:
      - ./backend/.env       # make sure this file exists
    environment:
      - TZ=${SERVER_TIMEZONE}
    depends_on:
      - mongo
    ports:
      - "8000:8000"
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
      --workers 2
      --forwarded-allow-ips="*"
      --proxy-headers
    volumes:
      - ${UPLOAD_DIR}:/app/backend/uploads
  
  worker_async:
    #pid: "host" # Uncomment this to measure broad system metrics
    #privileged: true #Only if pid: "host" not working
    build:
      context: ./backend
      dockerfile: Dockerfile
    # container_name: big_data_optimizer_worker_async
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      - TZ=${SERVER_TIMEZONE}
    depends_on:
      - mongo
    command: >
      python -m app.workers.async_worker
    volumes:
      - ${UPLOAD_DIR}:/app/backend/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: big_data_optimizer_frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env.local      # optional, if you have env vars for API URL
    depends_on:
      - backend
    ports:
      - "3000:3000"
    command: npm run start

volumes:
  mongo-data: